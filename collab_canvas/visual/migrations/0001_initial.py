# Generated by Django 2.0.9 on 2018-12-27 13:31

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VisualCanvas',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Canvas Title')),
                ('slug', models.SlugField(unique=True, verbose_name='URL Compliant Title')),
                ('description', models.TextField(blank=True, max_length=200)),
                ('start_time', models.DateTimeField(verbose_name='Start Time of Public Canvas Editing')),
                ('end_time', models.DateTimeField(verbose_name='Time the Canvas Will Stop Accepting Edits')),
                ('grid_width', models.PositiveSmallIntegerField(default=8, verbose_name='Grid horizontal (x) length, where max number of cells is this times grid_height.')),
                ('grid_height', models.PositiveSmallIntegerField(default=8, verbose_name='Grid vertical (y) length, where max number of cells is this time grid_width.')),
                ('cell_divisions', models.PositiveSmallIntegerField(default=8, verbose_name='Cell Divisions')),
                ('is_torus', models.BooleanField(default=False, verbose_name="Initialize a torus grid that can't be changed")),
                ('new_cells_allowed', models.BooleanField(default=False, verbose_name='Allow new cells to be added')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Person who created this Visual Canvas')),
            ],
        ),
        migrations.CreateModel(
            name='VisualCell',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_position', models.IntegerField(verbose_name='Horizontal position relative to 0')),
                ('y_position', models.IntegerField(verbose_name='Veritical position relative to 0')),
                ('is_editable', models.BooleanField(default=True, verbose_name='Whether artists are allowed to edit this cell.')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visual_cells', to=settings.AUTH_USER_MODEL, verbose_name='Artist for this Part of the Canvas')),
                ('canvas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visual_cells', to='visual.VisualCanvas', verbose_name='Canvas Cell is Associated With')),
            ],
        ),
        migrations.CreateModel(
            name='VisualCellEdit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('edges_horizontal', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), size=None)),
                ('edges_vertical', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), size=None)),
                ('edges_south_east', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), size=None)),
                ('edges_south_west', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), size=None)),
                ('cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cell_edits', to='visual.VisualCell')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='visualcell',
            unique_together={('canvas', 'artist'), ('canvas', 'x_position', 'y_position')},
        ),
    ]
